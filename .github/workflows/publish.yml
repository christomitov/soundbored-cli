name: publish

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  id-token: write  # required for npm provenance

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pm: [npm, yarn, bun]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"   # Or set node-version: '20.x'
          registry-url: "https://registry.npmjs.org"
          cache: npm

      - name: Setup Bun
        if: matrix.pm == 'bun'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Install dependencies
        run: |
          if [ "${{ matrix.pm }}" = "npm" ]; then
            npm ci
          elif [ "${{ matrix.pm }}" = "yarn" ]; then
            yarn install --no-progress
          else
            bun install
          fi

      - name: Build
        run: |
          if [ "${{ matrix.pm }}" = "npm" ]; then
            npm run build
          elif [ "${{ matrix.pm }}" = "yarn" ]; then
            yarn run build
          else
            bun run build
          fi

      - name: Verify package contents and pack
        id: pack
        run: |
          set -e
          # Show what would be published
          npm pack --dry-run
          # Create a tarball to validate install
          PKG_NAME=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          TARBALL="$PKG_NAME-$VER.tgz"
          npm pack
          echo "tarball=$TARBALL" >> "$GITHUB_OUTPUT"

      - name: Install tarball globally and run help
        run: |
          set -e
          if [ "${{ matrix.pm }}" = "npm" ]; then
            npm config set prefix "$HOME/.npm-global"
            echo "$HOME/.npm-global/bin" >> $GITHUB_PATH
            export PATH="$HOME/.npm-global/bin:$PATH"
            npm i -g "./${{ steps.pack.outputs.tarball }}"
          elif [ "${{ matrix.pm }}" = "yarn" ]; then
            yarn global add "./${{ steps.pack.outputs.tarball }}"
            export PATH="$(yarn global bin):$PATH"
          else
            bun add -g "./${{ steps.pack.outputs.tarball }}"
            export PATH="$HOME/.bun/bin:$PATH"
          fi
          command -v soundbored || (echo "soundbored not in PATH" && exit 1)
          soundbored --help

  publish:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npm (with provenance)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance
